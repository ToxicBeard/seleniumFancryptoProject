/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.identity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import is.toxic.db.identity.Indexes;
import is.toxic.db.identity.Keys;
import is.toxic.db.identity.Public;
import is.toxic.db.identity.tables.records.PersistedGrantsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersistedGrants extends TableImpl<PersistedGrantsRecord> {

    private static final long serialVersionUID = -755211339;

    /**
     * The reference instance of <code>public.persisted_grants</code>
     */
    public static final PersistedGrants PERSISTED_GRANTS = new PersistedGrants();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersistedGrantsRecord> getRecordType() {
        return PersistedGrantsRecord.class;
    }

    /**
     * The column <code>public.persisted_grants.key</code>.
     */
    public final TableField<PersistedGrantsRecord, String> KEY = createField(DSL.name("key"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.persisted_grants.type</code>.
     */
    public final TableField<PersistedGrantsRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.persisted_grants.subject_id</code>.
     */
    public final TableField<PersistedGrantsRecord, String> SUBJECT_ID = createField(DSL.name("subject_id"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.persisted_grants.client_id</code>.
     */
    public final TableField<PersistedGrantsRecord, String> CLIENT_ID = createField(DSL.name("client_id"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.persisted_grants.creation_time</code>.
     */
    public final TableField<PersistedGrantsRecord, LocalDateTime> CREATION_TIME = createField(DSL.name("creation_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.persisted_grants.expiration</code>.
     */
    public final TableField<PersistedGrantsRecord, LocalDateTime> EXPIRATION = createField(DSL.name("expiration"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.persisted_grants.data</code>.
     */
    public final TableField<PersistedGrantsRecord, String> DATA = createField(DSL.name("data"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.persisted_grants.remote_ip</code>.
     */
    public final TableField<PersistedGrantsRecord, String> REMOTE_IP = createField(DSL.name("remote_ip"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.persisted_grants.last_modifed</code>.
     */
    public final TableField<PersistedGrantsRecord, LocalDateTime> LAST_MODIFED = createField(DSL.name("last_modifed"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.persisted_grants</code> table reference
     */
    public PersistedGrants() {
        this(DSL.name("persisted_grants"), null);
    }

    /**
     * Create an aliased <code>public.persisted_grants</code> table reference
     */
    public PersistedGrants(String alias) {
        this(DSL.name(alias), PERSISTED_GRANTS);
    }

    /**
     * Create an aliased <code>public.persisted_grants</code> table reference
     */
    public PersistedGrants(Name alias) {
        this(alias, PERSISTED_GRANTS);
    }

    private PersistedGrants(Name alias, Table<PersistedGrantsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersistedGrants(Name alias, Table<PersistedGrantsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PersistedGrants(Table<O> child, ForeignKey<O, PersistedGrantsRecord> key) {
        super(child, key, PERSISTED_GRANTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IX_PERSISTED_GRANTS_CREATION_TIME, Indexes.IX_PERSISTED_GRANTS_LAST_MODIFED, Indexes.IX_PERSISTED_GRANTS_REMOTE_IP, Indexes.IX_PERSISTED_GRANTS_SUBJECT_ID);
    }

    @Override
    public UniqueKey<PersistedGrantsRecord> getPrimaryKey() {
        return Keys.PK_PERSISTED_GRANTS;
    }

    @Override
    public List<UniqueKey<PersistedGrantsRecord>> getKeys() {
        return Arrays.<UniqueKey<PersistedGrantsRecord>>asList(Keys.PK_PERSISTED_GRANTS);
    }

    @Override
    public PersistedGrants as(String alias) {
        return new PersistedGrants(DSL.name(alias), this);
    }

    @Override
    public PersistedGrants as(Name alias) {
        return new PersistedGrants(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersistedGrants rename(String name) {
        return new PersistedGrants(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersistedGrants rename(Name name) {
        return new PersistedGrants(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, LocalDateTime, LocalDateTime, String, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
