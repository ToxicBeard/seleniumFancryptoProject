/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.identity.tables.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import is.toxic.db.identity.tables.AspNetUserTokens;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AspNetUserTokensRecord extends UpdatableRecordImpl<AspNetUserTokensRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1048249573;

    /**
     * Setter for <code>public.asp_net_user_tokens.user_id</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.asp_net_user_tokens.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.asp_net_user_tokens.login_provider</code>.
     */
    public void setLoginProvider(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.asp_net_user_tokens.login_provider</code>.
     */
    public String getLoginProvider() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.asp_net_user_tokens.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.asp_net_user_tokens.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.asp_net_user_tokens.value</code>.
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.asp_net_user_tokens.value</code>.
     */
    public String getValue() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AspNetUserTokens.ASP_NET_USER_TOKENS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return AspNetUserTokens.ASP_NET_USER_TOKENS.LOGIN_PROVIDER;
    }

    @Override
    public Field<String> field3() {
        return AspNetUserTokens.ASP_NET_USER_TOKENS.NAME;
    }

    @Override
    public Field<String> field4() {
        return AspNetUserTokens.ASP_NET_USER_TOKENS.VALUE;
    }

    @Override
    public String component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getLoginProvider();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getValue();
    }

    @Override
    public String value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getLoginProvider();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getValue();
    }

    @Override
    public AspNetUserTokensRecord value1(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public AspNetUserTokensRecord value2(String value) {
        setLoginProvider(value);
        return this;
    }

    @Override
    public AspNetUserTokensRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public AspNetUserTokensRecord value4(String value) {
        setValue(value);
        return this;
    }

    @Override
    public AspNetUserTokensRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AspNetUserTokensRecord
     */
    public AspNetUserTokensRecord() {
        super(AspNetUserTokens.ASP_NET_USER_TOKENS);
    }

    /**
     * Create a detached, initialised AspNetUserTokensRecord
     */
    public AspNetUserTokensRecord(String userId, String loginProvider, String name, String value) {
        super(AspNetUserTokens.ASP_NET_USER_TOKENS);

        set(0, userId);
        set(1, loginProvider);
        set(2, name);
        set(3, value);
    }
}
