/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.data.tables;


import is.toxic.db.data.Keys;
import is.toxic.db.data.Public;
import is.toxic.db.data.tables.records.AdMetadataSnapshotRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdMetadataSnapshot extends TableImpl<AdMetadataSnapshotRecord> {

    private static final long serialVersionUID = 840055217;

    /**
     * The reference instance of <code>public.ad_metadata_snapshot</code>
     */
    public static final AdMetadataSnapshot AD_METADATA_SNAPSHOT = new AdMetadataSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdMetadataSnapshotRecord> getRecordType() {
        return AdMetadataSnapshotRecord.class;
    }

    /**
     * The column <code>public.ad_metadata_snapshot.key</code>.
     */
    public final TableField<AdMetadataSnapshotRecord, Long> KEY = createField(DSL.name("key"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.ad_metadata_snapshot.status</code>.
     */
    public final TableField<AdMetadataSnapshotRecord, Integer> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.ad_metadata_snapshot.max_amount</code>.
     */
    public final TableField<AdMetadataSnapshotRecord, BigDecimal> MAX_AMOUNT = createField(DSL.name("max_amount"), org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.ad_metadata_snapshot.price</code>.
     */
    public final TableField<AdMetadataSnapshotRecord, BigDecimal> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.ad_metadata_snapshot</code> table reference
     */
    public AdMetadataSnapshot() {
        this(DSL.name("ad_metadata_snapshot"), null);
    }

    /**
     * Create an aliased <code>public.ad_metadata_snapshot</code> table reference
     */
    public AdMetadataSnapshot(String alias) {
        this(DSL.name(alias), AD_METADATA_SNAPSHOT);
    }

    /**
     * Create an aliased <code>public.ad_metadata_snapshot</code> table reference
     */
    public AdMetadataSnapshot(Name alias) {
        this(alias, AD_METADATA_SNAPSHOT);
    }

    private AdMetadataSnapshot(Name alias, Table<AdMetadataSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdMetadataSnapshot(Name alias, Table<AdMetadataSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AdMetadataSnapshot(Table<O> child, ForeignKey<O, AdMetadataSnapshotRecord> key) {
        super(child, key, AD_METADATA_SNAPSHOT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<AdMetadataSnapshotRecord, Long> getIdentity() {
        return Keys.IDENTITY_AD_METADATA_SNAPSHOT;
    }

    @Override
    public UniqueKey<AdMetadataSnapshotRecord> getPrimaryKey() {
        return Keys.PK_AD_METADATA_SNAPSHOT;
    }

    @Override
    public List<UniqueKey<AdMetadataSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<AdMetadataSnapshotRecord>>asList(Keys.PK_AD_METADATA_SNAPSHOT);
    }

    @Override
    public AdMetadataSnapshot as(String alias) {
        return new AdMetadataSnapshot(DSL.name(alias), this);
    }

    @Override
    public AdMetadataSnapshot as(Name alias) {
        return new AdMetadataSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdMetadataSnapshot rename(String name) {
        return new AdMetadataSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdMetadataSnapshot rename(Name name) {
        return new AdMetadataSnapshot(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, BigDecimal, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
