/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.data.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import is.toxic.db.data.tables.Disputes;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisputesRecord extends UpdatableRecordImpl<DisputesRecord> implements Record3<Long, LocalDateTime, String> {

    private static final long serialVersionUID = -1884687144;

    /**
     * Setter for <code>public.disputes.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.disputes.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.disputes.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.disputes.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.disputes.jira_request_key</code>.
     */
    public void setJiraRequestKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.disputes.jira_request_key</code>.
     */
    public String getJiraRequestKey() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, LocalDateTime, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, LocalDateTime, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Disputes.DISPUTES.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Disputes.DISPUTES.CREATED_AT;
    }

    @Override
    public Field<String> field3() {
        return Disputes.DISPUTES.JIRA_REQUEST_KEY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public String component3() {
        return getJiraRequestKey();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public String value3() {
        return getJiraRequestKey();
    }

    @Override
    public DisputesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DisputesRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DisputesRecord value3(String value) {
        setJiraRequestKey(value);
        return this;
    }

    @Override
    public DisputesRecord values(Long value1, LocalDateTime value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DisputesRecord
     */
    public DisputesRecord() {
        super(Disputes.DISPUTES);
    }

    /**
     * Create a detached, initialised DisputesRecord
     */
    public DisputesRecord(Long id, LocalDateTime createdAt, String jiraRequestKey) {
        super(Disputes.DISPUTES);

        set(0, id);
        set(1, createdAt);
        set(2, jiraRequestKey);
    }
}
