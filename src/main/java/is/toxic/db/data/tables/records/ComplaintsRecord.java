/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.data.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import is.toxic.db.data.tables.Complaints;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComplaintsRecord extends UpdatableRecordImpl<ComplaintsRecord> implements Record5<Long, String, String, LocalDateTime, Integer> {

    private static final long serialVersionUID = -1714894454;

    /**
     * Setter for <code>public.complaints.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.complaints.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.complaints.text</code>.
     */
    public void setText(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.complaints.text</code>.
     */
    public String getText() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.complaints.from_contact</code>.
     */
    public void setFromContact(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.complaints.from_contact</code>.
     */
    public String getFromContact() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.complaints.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.complaints.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.complaints.status</code>.
     */
    public void setStatus(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.complaints.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, LocalDateTime, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, LocalDateTime, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Complaints.COMPLAINTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Complaints.COMPLAINTS.TEXT;
    }

    @Override
    public Field<String> field3() {
        return Complaints.COMPLAINTS.FROM_CONTACT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Complaints.COMPLAINTS.CREATED_AT;
    }

    @Override
    public Field<Integer> field5() {
        return Complaints.COMPLAINTS.STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getText();
    }

    @Override
    public String component3() {
        return getFromContact();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public Integer component5() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getText();
    }

    @Override
    public String value3() {
        return getFromContact();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public Integer value5() {
        return getStatus();
    }

    @Override
    public ComplaintsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ComplaintsRecord value2(String value) {
        setText(value);
        return this;
    }

    @Override
    public ComplaintsRecord value3(String value) {
        setFromContact(value);
        return this;
    }

    @Override
    public ComplaintsRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ComplaintsRecord value5(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public ComplaintsRecord values(Long value1, String value2, String value3, LocalDateTime value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComplaintsRecord
     */
    public ComplaintsRecord() {
        super(Complaints.COMPLAINTS);
    }

    /**
     * Create a detached, initialised ComplaintsRecord
     */
    public ComplaintsRecord(Long id, String text, String fromContact, LocalDateTime createdAt, Integer status) {
        super(Complaints.COMPLAINTS);

        set(0, id);
        set(1, text);
        set(2, fromContact);
        set(3, createdAt);
        set(4, status);
    }
}
