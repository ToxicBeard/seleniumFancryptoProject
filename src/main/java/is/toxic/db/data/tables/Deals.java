/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.data.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import is.toxic.db.data.Indexes;
import is.toxic.db.data.Keys;
import is.toxic.db.data.Public;
import is.toxic.db.data.tables.records.DealsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Deals extends TableImpl<DealsRecord> {

    private static final long serialVersionUID = -1778807741;

    /**
     * The reference instance of <code>public.deals</code>
     */
    public static final Deals DEALS = new Deals();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DealsRecord> getRecordType() {
        return DealsRecord.class;
    }

    /**
     * The column <code>public.deals.id</code>.
     */
    public final TableField<DealsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.deals.fiat_amount</code>.
     */
    public final TableField<DealsRecord, BigDecimal> FIAT_AMOUNT = createField(DSL.name("fiat_amount"), org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.deals.crypto_amount</code>.
     */
    public final TableField<DealsRecord, BigDecimal> CRYPTO_AMOUNT = createField(DSL.name("crypto_amount"), org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.deals.created_at</code>.
     */
    public final TableField<DealsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.deals.status</code>.
     */
    public final TableField<DealsRecord, Integer> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.deals.completed_at</code>.
     */
    public final TableField<DealsRecord, LocalDateTime> COMPLETED_AT = createField(DSL.name("completed_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.deals.canceled_at</code>.
     */
    public final TableField<DealsRecord, LocalDateTime> CANCELED_AT = createField(DSL.name("canceled_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.deals.is_fiat_payed</code>.
     */
    public final TableField<DealsRecord, Boolean> IS_FIAT_PAYED = createField(DSL.name("is_fiat_payed"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.deals.fiat_payed_at</code>.
     */
    public final TableField<DealsRecord, LocalDateTime> FIAT_PAYED_AT = createField(DSL.name("fiat_payed_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.deals.ad_owner_feed_back_id</code>.
     */
    public final TableField<DealsRecord, Long> AD_OWNER_FEED_BACK_ID = createField(DSL.name("ad_owner_feed_back_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.deals.initiator_feedback_id</code>.
     */
    public final TableField<DealsRecord, Long> INITIATOR_FEEDBACK_ID = createField(DSL.name("initiator_feedback_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.deals.dispute_id</code>.
     */
    public final TableField<DealsRecord, Long> DISPUTE_ID = createField(DSL.name("dispute_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.deals.ad_snapshot_key</code>.
     */
    public final TableField<DealsRecord, Long> AD_SNAPSHOT_KEY = createField(DSL.name("ad_snapshot_key"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.deals.initiator_snapshot_key</code>.
     */
    public final TableField<DealsRecord, Long> INITIATOR_SNAPSHOT_KEY = createField(DSL.name("initiator_snapshot_key"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.deals.wallet</code>.
     */
    public final TableField<DealsRecord, String> WALLET = createField(DSL.name("wallet"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.deals.fee</code>.
     */
    public final TableField<DealsRecord, BigDecimal> FEE = createField(DSL.name("fee"), org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.deals</code> table reference
     */
    public Deals() {
        this(DSL.name("deals"), null);
    }

    /**
     * Create an aliased <code>public.deals</code> table reference
     */
    public Deals(String alias) {
        this(DSL.name(alias), DEALS);
    }

    /**
     * Create an aliased <code>public.deals</code> table reference
     */
    public Deals(Name alias) {
        this(alias, DEALS);
    }

    private Deals(Name alias, Table<DealsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Deals(Name alias, Table<DealsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Deals(Table<O> child, ForeignKey<O, DealsRecord> key) {
        super(child, key, DEALS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IX_DEALS_AD_OWNER_FEED_BACK_ID, Indexes.IX_DEALS_AD_SNAPSHOT_KEY, Indexes.IX_DEALS_DISPUTE_ID, Indexes.IX_DEALS_INITIATOR_FEEDBACK_ID, Indexes.IX_DEALS_INITIATOR_SNAPSHOT_KEY);
    }

    @Override
    public Identity<DealsRecord, Long> getIdentity() {
        return Keys.IDENTITY_DEALS;
    }

    @Override
    public UniqueKey<DealsRecord> getPrimaryKey() {
        return Keys.PK_DEALS;
    }

    @Override
    public List<UniqueKey<DealsRecord>> getKeys() {
        return Arrays.<UniqueKey<DealsRecord>>asList(Keys.PK_DEALS);
    }

    @Override
    public List<ForeignKey<DealsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DealsRecord, ?>>asList(Keys.DEALS__FK_DEALS_FEEDBACKS_AD_OWNER_FEED_BACK_ID, Keys.DEALS__FK_DEALS_FEEDBACKS_INITIATOR_FEEDBACK_ID, Keys.DEALS__FK_DEALS_DISPUTES_DISPUTE_ID, Keys.DEALS__FK_DEALS_ADVERTISEMENT_SNAPSHOT_AD_SNAPSHOT_KEY, Keys.DEALS__FK_DEALS_USER_DATA_SNAPSHOT_INITIATOR_SNAPSHOT_KEY);
    }

    public Feedbacks fkDealsFeedbacksAdOwnerFeedBackId() {
        return new Feedbacks(this, Keys.DEALS__FK_DEALS_FEEDBACKS_AD_OWNER_FEED_BACK_ID);
    }

    public Feedbacks fkDealsFeedbacksInitiatorFeedbackId() {
        return new Feedbacks(this, Keys.DEALS__FK_DEALS_FEEDBACKS_INITIATOR_FEEDBACK_ID);
    }

    public Disputes disputes() {
        return new Disputes(this, Keys.DEALS__FK_DEALS_DISPUTES_DISPUTE_ID);
    }

    public AdvertisementSnapshot advertisementSnapshot() {
        return new AdvertisementSnapshot(this, Keys.DEALS__FK_DEALS_ADVERTISEMENT_SNAPSHOT_AD_SNAPSHOT_KEY);
    }

    public UserDataSnapshot userDataSnapshot() {
        return new UserDataSnapshot(this, Keys.DEALS__FK_DEALS_USER_DATA_SNAPSHOT_INITIATOR_SNAPSHOT_KEY);
    }

    @Override
    public Deals as(String alias) {
        return new Deals(DSL.name(alias), this);
    }

    @Override
    public Deals as(Name alias) {
        return new Deals(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Deals rename(String name) {
        return new Deals(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Deals rename(Name name) {
        return new Deals(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, BigDecimal, BigDecimal, LocalDateTime, Integer, LocalDateTime, LocalDateTime, Boolean, LocalDateTime, Long, Long, Long, Long, Long, String, BigDecimal> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
