/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.data.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import is.toxic.db.data.tables.OutTransactionRequests;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OutTransactionRequestsRecord extends UpdatableRecordImpl<OutTransactionRequestsRecord> implements Record10<Long, Integer, BigDecimal, BigDecimal, String, Long, LocalDateTime, Boolean, Boolean, String> {

    private static final long serialVersionUID = 1009667753;

    /**
     * Setter for <code>public.out_transaction_requests.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.out_transaction_requests.currency</code>.
     */
    public void setCurrency(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.currency</code>.
     */
    public Integer getCurrency() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.out_transaction_requests.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.out_transaction_requests.fee</code>.
     */
    public void setFee(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.out_transaction_requests.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.out_transaction_requests.owner_id</code>.
     */
    public void setOwnerId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.owner_id</code>.
     */
    public Long getOwnerId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.out_transaction_requests.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.out_transaction_requests.is_started</code>.
     */
    public void setIsStarted(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.is_started</code>.
     */
    public Boolean getIsStarted() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.out_transaction_requests.subtract_fee_from_amount</code>.
     */
    public void setSubtractFeeFromAmount(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.subtract_fee_from_amount</code>.
     */
    public Boolean getSubtractFeeFromAmount() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.out_transaction_requests.btc_core_wallet_private_key</code>.
     */
    public void setBtcCoreWalletPrivateKey(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.out_transaction_requests.btc_core_wallet_private_key</code>.
     */
    public String getBtcCoreWalletPrivateKey() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Integer, BigDecimal, BigDecimal, String, Long, LocalDateTime, Boolean, Boolean, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, Integer, BigDecimal, BigDecimal, String, Long, LocalDateTime, Boolean, Boolean, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.CURRENCY;
    }

    @Override
    public Field<BigDecimal> field3() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.AMOUNT;
    }

    @Override
    public Field<BigDecimal> field4() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.FEE;
    }

    @Override
    public Field<String> field5() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.ADDRESS;
    }

    @Override
    public Field<Long> field6() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.OWNER_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.CREATED_AT;
    }

    @Override
    public Field<Boolean> field8() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.IS_STARTED;
    }

    @Override
    public Field<Boolean> field9() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.SUBTRACT_FEE_FROM_AMOUNT;
    }

    @Override
    public Field<String> field10() {
        return OutTransactionRequests.OUT_TRANSACTION_REQUESTS.BTC_CORE_WALLET_PRIVATE_KEY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCurrency();
    }

    @Override
    public BigDecimal component3() {
        return getAmount();
    }

    @Override
    public BigDecimal component4() {
        return getFee();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public Long component6() {
        return getOwnerId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public Boolean component8() {
        return getIsStarted();
    }

    @Override
    public Boolean component9() {
        return getSubtractFeeFromAmount();
    }

    @Override
    public String component10() {
        return getBtcCoreWalletPrivateKey();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCurrency();
    }

    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    @Override
    public BigDecimal value4() {
        return getFee();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public Long value6() {
        return getOwnerId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public Boolean value8() {
        return getIsStarted();
    }

    @Override
    public Boolean value9() {
        return getSubtractFeeFromAmount();
    }

    @Override
    public String value10() {
        return getBtcCoreWalletPrivateKey();
    }

    @Override
    public OutTransactionRequestsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value2(Integer value) {
        setCurrency(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value4(BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value6(Long value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value8(Boolean value) {
        setIsStarted(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value9(Boolean value) {
        setSubtractFeeFromAmount(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord value10(String value) {
        setBtcCoreWalletPrivateKey(value);
        return this;
    }

    @Override
    public OutTransactionRequestsRecord values(Long value1, Integer value2, BigDecimal value3, BigDecimal value4, String value5, Long value6, LocalDateTime value7, Boolean value8, Boolean value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OutTransactionRequestsRecord
     */
    public OutTransactionRequestsRecord() {
        super(OutTransactionRequests.OUT_TRANSACTION_REQUESTS);
    }

    /**
     * Create a detached, initialised OutTransactionRequestsRecord
     */
    public OutTransactionRequestsRecord(Long id, Integer currency, BigDecimal amount, BigDecimal fee, String address, Long ownerId, LocalDateTime createdAt, Boolean isStarted, Boolean subtractFeeFromAmount, String btcCoreWalletPrivateKey) {
        super(OutTransactionRequests.OUT_TRANSACTION_REQUESTS);

        set(0, id);
        set(1, currency);
        set(2, amount);
        set(3, fee);
        set(4, address);
        set(5, ownerId);
        set(6, createdAt);
        set(7, isStarted);
        set(8, subtractFeeFromAmount);
        set(9, btcCoreWalletPrivateKey);
    }
}
