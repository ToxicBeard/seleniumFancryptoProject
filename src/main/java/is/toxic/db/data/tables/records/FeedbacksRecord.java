/*
 * This file is generated by jOOQ.
 */
package is.toxic.db.data.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import is.toxic.db.data.tables.Feedbacks;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbacksRecord extends UpdatableRecordImpl<FeedbacksRecord> implements Record6<Long, Long, Long, LocalDateTime, Boolean, String> {

    private static final long serialVersionUID = 499321853;

    /**
     * Setter for <code>public.feedbacks.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.feedbacks.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.feedbacks.from_id</code>.
     */
    public void setFromId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.feedbacks.from_id</code>.
     */
    public Long getFromId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.feedbacks.to_id</code>.
     */
    public void setToId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.feedbacks.to_id</code>.
     */
    public Long getToId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.feedbacks.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.feedbacks.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.feedbacks.is_positive</code>.
     */
    public void setIsPositive(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.feedbacks.is_positive</code>.
     */
    public Boolean getIsPositive() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.feedbacks.text</code>.
     */
    public void setText(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.feedbacks.text</code>.
     */
    public String getText() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, LocalDateTime, Boolean, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, LocalDateTime, Boolean, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Feedbacks.FEEDBACKS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Feedbacks.FEEDBACKS.FROM_ID;
    }

    @Override
    public Field<Long> field3() {
        return Feedbacks.FEEDBACKS.TO_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Feedbacks.FEEDBACKS.CREATED_AT;
    }

    @Override
    public Field<Boolean> field5() {
        return Feedbacks.FEEDBACKS.IS_POSITIVE;
    }

    @Override
    public Field<String> field6() {
        return Feedbacks.FEEDBACKS.TEXT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getFromId();
    }

    @Override
    public Long component3() {
        return getToId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public Boolean component5() {
        return getIsPositive();
    }

    @Override
    public String component6() {
        return getText();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getFromId();
    }

    @Override
    public Long value3() {
        return getToId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public Boolean value5() {
        return getIsPositive();
    }

    @Override
    public String value6() {
        return getText();
    }

    @Override
    public FeedbacksRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FeedbacksRecord value2(Long value) {
        setFromId(value);
        return this;
    }

    @Override
    public FeedbacksRecord value3(Long value) {
        setToId(value);
        return this;
    }

    @Override
    public FeedbacksRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public FeedbacksRecord value5(Boolean value) {
        setIsPositive(value);
        return this;
    }

    @Override
    public FeedbacksRecord value6(String value) {
        setText(value);
        return this;
    }

    @Override
    public FeedbacksRecord values(Long value1, Long value2, Long value3, LocalDateTime value4, Boolean value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbacksRecord
     */
    public FeedbacksRecord() {
        super(Feedbacks.FEEDBACKS);
    }

    /**
     * Create a detached, initialised FeedbacksRecord
     */
    public FeedbacksRecord(Long id, Long fromId, Long toId, LocalDateTime createdAt, Boolean isPositive, String text) {
        super(Feedbacks.FEEDBACKS);

        set(0, id);
        set(1, fromId);
        set(2, toId);
        set(3, createdAt);
        set(4, isPositive);
        set(5, text);
    }
}
