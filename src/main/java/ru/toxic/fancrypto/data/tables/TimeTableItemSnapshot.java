/*
 * This file is generated by jOOQ.
 */
package ru.toxic.fancrypto.data.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.toxic.fancrypto.data.Indexes;
import ru.toxic.fancrypto.data.Keys;
import ru.toxic.fancrypto.data.Public;
import ru.toxic.fancrypto.data.tables.records.TimeTableItemSnapshotRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeTableItemSnapshot extends TableImpl<TimeTableItemSnapshotRecord> {

    private static final long serialVersionUID = 429346777;

    /**
     * The reference instance of <code>public.time_table_item_snapshot</code>
     */
    public static final TimeTableItemSnapshot TIME_TABLE_ITEM_SNAPSHOT = new TimeTableItemSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimeTableItemSnapshotRecord> getRecordType() {
        return TimeTableItemSnapshotRecord.class;
    }

    /**
     * The column <code>public.time_table_item_snapshot.key</code>.
     */
    public final TableField<TimeTableItemSnapshotRecord, Long> KEY = createField(DSL.name("key"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.time_table_item_snapshot.day</code>.
     */
    public final TableField<TimeTableItemSnapshotRecord, Integer> DAY = createField(DSL.name("day"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table_item_snapshot.start</code>.
     */
    public final TableField<TimeTableItemSnapshotRecord, Short> START = createField(DSL.name("start"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.time_table_item_snapshot.end</code>.
     */
    public final TableField<TimeTableItemSnapshotRecord, Short> END = createField(DSL.name("end"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.time_table_item_snapshot.advertisement_snapshot_key</code>.
     */
    public final TableField<TimeTableItemSnapshotRecord, Long> ADVERTISEMENT_SNAPSHOT_KEY = createField(DSL.name("advertisement_snapshot_key"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.time_table_item_snapshot</code> table reference
     */
    public TimeTableItemSnapshot() {
        this(DSL.name("time_table_item_snapshot"), null);
    }

    /**
     * Create an aliased <code>public.time_table_item_snapshot</code> table reference
     */
    public TimeTableItemSnapshot(String alias) {
        this(DSL.name(alias), TIME_TABLE_ITEM_SNAPSHOT);
    }

    /**
     * Create an aliased <code>public.time_table_item_snapshot</code> table reference
     */
    public TimeTableItemSnapshot(Name alias) {
        this(alias, TIME_TABLE_ITEM_SNAPSHOT);
    }

    private TimeTableItemSnapshot(Name alias, Table<TimeTableItemSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private TimeTableItemSnapshot(Name alias, Table<TimeTableItemSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TimeTableItemSnapshot(Table<O> child, ForeignKey<O, TimeTableItemSnapshotRecord> key) {
        super(child, key, TIME_TABLE_ITEM_SNAPSHOT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IX_TIME_TABLE_ITEM_SNAPSHOT_ADVERTISEMENT_SNAPSHOT_KEY);
    }

    @Override
    public Identity<TimeTableItemSnapshotRecord, Long> getIdentity() {
        return Keys.IDENTITY_TIME_TABLE_ITEM_SNAPSHOT;
    }

    @Override
    public UniqueKey<TimeTableItemSnapshotRecord> getPrimaryKey() {
        return Keys.PK_TIME_TABLE_ITEM_SNAPSHOT;
    }

    @Override
    public List<UniqueKey<TimeTableItemSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<TimeTableItemSnapshotRecord>>asList(Keys.PK_TIME_TABLE_ITEM_SNAPSHOT);
    }

    @Override
    public List<ForeignKey<TimeTableItemSnapshotRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TimeTableItemSnapshotRecord, ?>>asList(Keys.TIME_TABLE_ITEM_SNAPSHOT__FK_TIME_TABLE_ITEM_SNAPSHOT_ADVERTISEMENT_SNAPSHOT_ADVERTISEME_7e);
    }

    public AdvertisementSnapshot advertisementSnapshot() {
        return new AdvertisementSnapshot(this, Keys.TIME_TABLE_ITEM_SNAPSHOT__FK_TIME_TABLE_ITEM_SNAPSHOT_ADVERTISEMENT_SNAPSHOT_ADVERTISEME_7e);
    }

    @Override
    public TimeTableItemSnapshot as(String alias) {
        return new TimeTableItemSnapshot(DSL.name(alias), this);
    }

    @Override
    public TimeTableItemSnapshot as(Name alias) {
        return new TimeTableItemSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeTableItemSnapshot rename(String name) {
        return new TimeTableItemSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeTableItemSnapshot rename(Name name) {
        return new TimeTableItemSnapshot(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Short, Short, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
