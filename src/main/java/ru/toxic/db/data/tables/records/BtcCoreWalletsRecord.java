/*
 * This file is generated by jOOQ.
 */
package ru.toxic.db.data.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.toxic.db.data.tables.BtcCoreWallets;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BtcCoreWalletsRecord extends UpdatableRecordImpl<BtcCoreWalletsRecord> implements Record6<String, BigDecimal, LocalDateTime, BigDecimal, BigDecimal, LocalDateTime> {

    private static final long serialVersionUID = 1845136460;

    /**
     * Setter for <code>public.btc_core_wallets.private_key</code>.
     */
    public void setPrivateKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.btc_core_wallets.private_key</code>.
     */
    public String getPrivateKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.btc_core_wallets.fee</code>.
     */
    public void setFee(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.btc_core_wallets.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.btc_core_wallets.last_block</code>.
     */
    public void setLastBlock(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.btc_core_wallets.last_block</code>.
     */
    public LocalDateTime getLastBlock() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.btc_core_wallets.balance</code>.
     */
    public void setBalance(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.btc_core_wallets.balance</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.btc_core_wallets.unconfirmed_balance</code>.
     */
    public void setUnconfirmedBalance(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.btc_core_wallets.unconfirmed_balance</code>.
     */
    public BigDecimal getUnconfirmedBalance() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.btc_core_wallets.max_transactions_time</code>.
     */
    public void setMaxTransactionsTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.btc_core_wallets.max_transactions_time</code>.
     */
    public LocalDateTime getMaxTransactionsTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, BigDecimal, LocalDateTime, BigDecimal, BigDecimal, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, BigDecimal, LocalDateTime, BigDecimal, BigDecimal, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BtcCoreWallets.BTC_CORE_WALLETS.PRIVATE_KEY;
    }

    @Override
    public Field<BigDecimal> field2() {
        return BtcCoreWallets.BTC_CORE_WALLETS.FEE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return BtcCoreWallets.BTC_CORE_WALLETS.LAST_BLOCK;
    }

    @Override
    public Field<BigDecimal> field4() {
        return BtcCoreWallets.BTC_CORE_WALLETS.BALANCE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return BtcCoreWallets.BTC_CORE_WALLETS.UNCONFIRMED_BALANCE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return BtcCoreWallets.BTC_CORE_WALLETS.MAX_TRANSACTIONS_TIME;
    }

    @Override
    public String component1() {
        return getPrivateKey();
    }

    @Override
    public BigDecimal component2() {
        return getFee();
    }

    @Override
    public LocalDateTime component3() {
        return getLastBlock();
    }

    @Override
    public BigDecimal component4() {
        return getBalance();
    }

    @Override
    public BigDecimal component5() {
        return getUnconfirmedBalance();
    }

    @Override
    public LocalDateTime component6() {
        return getMaxTransactionsTime();
    }

    @Override
    public String value1() {
        return getPrivateKey();
    }

    @Override
    public BigDecimal value2() {
        return getFee();
    }

    @Override
    public LocalDateTime value3() {
        return getLastBlock();
    }

    @Override
    public BigDecimal value4() {
        return getBalance();
    }

    @Override
    public BigDecimal value5() {
        return getUnconfirmedBalance();
    }

    @Override
    public LocalDateTime value6() {
        return getMaxTransactionsTime();
    }

    @Override
    public BtcCoreWalletsRecord value1(String value) {
        setPrivateKey(value);
        return this;
    }

    @Override
    public BtcCoreWalletsRecord value2(BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    public BtcCoreWalletsRecord value3(LocalDateTime value) {
        setLastBlock(value);
        return this;
    }

    @Override
    public BtcCoreWalletsRecord value4(BigDecimal value) {
        setBalance(value);
        return this;
    }

    @Override
    public BtcCoreWalletsRecord value5(BigDecimal value) {
        setUnconfirmedBalance(value);
        return this;
    }

    @Override
    public BtcCoreWalletsRecord value6(LocalDateTime value) {
        setMaxTransactionsTime(value);
        return this;
    }

    @Override
    public BtcCoreWalletsRecord values(String value1, BigDecimal value2, LocalDateTime value3, BigDecimal value4, BigDecimal value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BtcCoreWalletsRecord
     */
    public BtcCoreWalletsRecord() {
        super(BtcCoreWallets.BTC_CORE_WALLETS);
    }

    /**
     * Create a detached, initialised BtcCoreWalletsRecord
     */
    public BtcCoreWalletsRecord(String privateKey, BigDecimal fee, LocalDateTime lastBlock, BigDecimal balance, BigDecimal unconfirmedBalance, LocalDateTime maxTransactionsTime) {
        super(BtcCoreWallets.BTC_CORE_WALLETS);

        set(0, privateKey);
        set(1, fee);
        set(2, lastBlock);
        set(3, balance);
        set(4, unconfirmedBalance);
        set(5, maxTransactionsTime);
    }
}
