/*
 * This file is generated by jOOQ.
 */
package ru.toxic.db.data.tables.records;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.toxic.db.data.tables.AvgPrices;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AvgPricesRecord extends UpdatableRecordImpl<AvgPricesRecord> implements Record4<Integer, Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = 1479865007;

    /**
     * Setter for <code>public.avg_prices.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.avg_prices.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.avg_prices.fiat_currency</code>.
     */
    public void setFiatCurrency(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.avg_prices.fiat_currency</code>.
     */
    public Integer getFiatCurrency() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.avg_prices.crypto_currency</code>.
     */
    public void setCryptoCurrency(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.avg_prices.crypto_currency</code>.
     */
    public Integer getCryptoCurrency() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.avg_prices.value</code>.
     */
    public void setValue(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.avg_prices.value</code>.
     */
    public BigDecimal getValue() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AvgPrices.AVG_PRICES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AvgPrices.AVG_PRICES.FIAT_CURRENCY;
    }

    @Override
    public Field<Integer> field3() {
        return AvgPrices.AVG_PRICES.CRYPTO_CURRENCY;
    }

    @Override
    public Field<BigDecimal> field4() {
        return AvgPrices.AVG_PRICES.VALUE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getFiatCurrency();
    }

    @Override
    public Integer component3() {
        return getCryptoCurrency();
    }

    @Override
    public BigDecimal component4() {
        return getValue();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getFiatCurrency();
    }

    @Override
    public Integer value3() {
        return getCryptoCurrency();
    }

    @Override
    public BigDecimal value4() {
        return getValue();
    }

    @Override
    public AvgPricesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AvgPricesRecord value2(Integer value) {
        setFiatCurrency(value);
        return this;
    }

    @Override
    public AvgPricesRecord value3(Integer value) {
        setCryptoCurrency(value);
        return this;
    }

    @Override
    public AvgPricesRecord value4(BigDecimal value) {
        setValue(value);
        return this;
    }

    @Override
    public AvgPricesRecord values(Integer value1, Integer value2, Integer value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AvgPricesRecord
     */
    public AvgPricesRecord() {
        super(AvgPrices.AVG_PRICES);
    }

    /**
     * Create a detached, initialised AvgPricesRecord
     */
    public AvgPricesRecord(Integer id, Integer fiatCurrency, Integer cryptoCurrency, BigDecimal value) {
        super(AvgPrices.AVG_PRICES);

        set(0, id);
        set(1, fiatCurrency);
        set(2, cryptoCurrency);
        set(3, value);
    }
}
