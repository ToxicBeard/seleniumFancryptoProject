/*
 * This file is generated by jOOQ.
 */
package ru.toxic.db.data.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.toxic.db.data.tables.Invoices;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoicesRecord extends UpdatableRecordImpl<InvoicesRecord> {

    private static final long serialVersionUID = 2098275744;

    /**
     * Setter for <code>public.invoices.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.invoices.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.invoices.is_private</code>.
     */
    public void setIsPrivate(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.invoices.is_private</code>.
     */
    public Boolean getIsPrivate() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.invoices.is_base_crypto</code>.
     */
    public void setIsBaseCrypto(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.invoices.is_base_crypto</code>.
     */
    public Boolean getIsBaseCrypto() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.invoices.user_name</code>.
     */
    public void setUserName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.invoices.user_name</code>.
     */
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.invoices.fiat_currency</code>.
     */
    public void setFiatCurrency(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.invoices.fiat_currency</code>.
     */
    public Integer getFiatCurrency() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.invoices.ttl_minutes</code>.
     */
    public void setTtlMinutes(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.invoices.ttl_minutes</code>.
     */
    public Integer getTtlMinutes() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.invoices.price_variable</code>.
     */
    public void setPriceVariable(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.invoices.price_variable</code>.
     */
    public String getPriceVariable() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.invoices.comment</code>.
     */
    public void setComment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.invoices.comment</code>.
     */
    public String getComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.invoices.pieces_max</code>.
     */
    public void setPiecesMax(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.invoices.pieces_max</code>.
     */
    public Integer getPiecesMax() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.invoices.pieces_min</code>.
     */
    public void setPiecesMin(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.invoices.pieces_min</code>.
     */
    public Integer getPiecesMin() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.invoices.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.invoices.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>public.invoices.amount_payed_crypto</code>.
     */
    public void setAmountPayedCrypto(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.invoices.amount_payed_crypto</code>.
     */
    public BigDecimal getAmountPayedCrypto() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>public.invoices.amount_payed_fiat</code>.
     */
    public void setAmountPayedFiat(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.invoices.amount_payed_fiat</code>.
     */
    public BigDecimal getAmountPayedFiat() {
        return (BigDecimal) get(12);
    }

    /**
     * Setter for <code>public.invoices.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.invoices.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>public.invoices.current_crypto_amount</code>.
     */
    public void setCurrentCryptoAmount(BigDecimal value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.invoices.current_crypto_amount</code>.
     */
    public BigDecimal getCurrentCryptoAmount() {
        return (BigDecimal) get(14);
    }

    /**
     * Setter for <code>public.invoices.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.invoices.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>public.invoices.expire_time</code>.
     */
    public void setExpireTime(LocalDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.invoices.expire_time</code>.
     */
    public LocalDateTime getExpireTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>public.invoices.owner_fk</code>.
     */
    public void setOwnerFk(Long value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.invoices.owner_fk</code>.
     */
    public Long getOwnerFk() {
        return (Long) get(17);
    }

    /**
     * Setter for <code>public.invoices.payments_count</code>.
     */
    public void setPaymentsCount(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.invoices.payments_count</code>.
     */
    public Integer getPaymentsCount() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>public.invoices.status</code>.
     */
    public void setStatus(Integer value) {
        set(19, value);
    }

    /**
     * Getter for <code>public.invoices.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(19);
    }

    /**
     * Setter for <code>public.invoices.target_user_fk</code>.
     */
    public void setTargetUserFk(Long value) {
        set(20, value);
    }

    /**
     * Getter for <code>public.invoices.target_user_fk</code>.
     */
    public Long getTargetUserFk() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>public.invoices.fee</code>.
     */
    public void setFee(BigDecimal value) {
        set(21, value);
    }

    /**
     * Getter for <code>public.invoices.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(21);
    }

    /**
     * Setter for <code>public.invoices.target_deleted</code>.
     */
    public void setTargetDeleted(Boolean value) {
        set(22, value);
    }

    /**
     * Getter for <code>public.invoices.target_deleted</code>.
     */
    public Boolean getTargetDeleted() {
        return (Boolean) get(22);
    }

    /**
     * Setter for <code>public.invoices.limit_liquidity</code>.
     */
    public void setLimitLiquidity(Boolean value) {
        set(23, value);
    }

    /**
     * Getter for <code>public.invoices.limit_liquidity</code>.
     */
    public Boolean getLimitLiquidity() {
        return (Boolean) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoicesRecord
     */
    public InvoicesRecord() {
        super(Invoices.INVOICES);
    }

    /**
     * Create a detached, initialised InvoicesRecord
     */
    public InvoicesRecord(Long id, Boolean isPrivate, Boolean isBaseCrypto, String userName, Integer fiatCurrency, Integer ttlMinutes, String priceVariable, String comment, Integer piecesMax, Integer piecesMin, BigDecimal price, BigDecimal amountPayedCrypto, BigDecimal amountPayedFiat, LocalDateTime createdAt, BigDecimal currentCryptoAmount, LocalDateTime deletedAt, LocalDateTime expireTime, Long ownerFk, Integer paymentsCount, Integer status, Long targetUserFk, BigDecimal fee, Boolean targetDeleted, Boolean limitLiquidity) {
        super(Invoices.INVOICES);

        set(0, id);
        set(1, isPrivate);
        set(2, isBaseCrypto);
        set(3, userName);
        set(4, fiatCurrency);
        set(5, ttlMinutes);
        set(6, priceVariable);
        set(7, comment);
        set(8, piecesMax);
        set(9, piecesMin);
        set(10, price);
        set(11, amountPayedCrypto);
        set(12, amountPayedFiat);
        set(13, createdAt);
        set(14, currentCryptoAmount);
        set(15, deletedAt);
        set(16, expireTime);
        set(17, ownerFk);
        set(18, paymentsCount);
        set(19, status);
        set(20, targetUserFk);
        set(21, fee);
        set(22, targetDeleted);
        set(23, limitLiquidity);
    }
}
