/*
 * This file is generated by jOOQ.
 */
package ru.toxic.db.identity;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.toxic.db.identity.tables.AspNetRoleClaims;
import ru.toxic.db.identity.tables.AspNetRoles;
import ru.toxic.db.identity.tables.AspNetUserClaims;
import ru.toxic.db.identity.tables.AspNetUserLogins;
import ru.toxic.db.identity.tables.AspNetUserRoles;
import ru.toxic.db.identity.tables.AspNetUserTokens;
import ru.toxic.db.identity.tables.AspNetUsers;
import ru.toxic.db.identity.tables.PersistedGrants;
import ru.toxic.db.identity.tables.SignIns;
import ru.toxic.db.identity.tables.TelegramStates;
import ru.toxic.db.identity.tables.__Efmigrationshistory;
import ru.toxic.db.identity.tables.records.AspNetRoleClaimsRecord;
import ru.toxic.db.identity.tables.records.AspNetRolesRecord;
import ru.toxic.db.identity.tables.records.AspNetUserClaimsRecord;
import ru.toxic.db.identity.tables.records.AspNetUserLoginsRecord;
import ru.toxic.db.identity.tables.records.AspNetUserRolesRecord;
import ru.toxic.db.identity.tables.records.AspNetUserTokensRecord;
import ru.toxic.db.identity.tables.records.AspNetUsersRecord;
import ru.toxic.db.identity.tables.records.PersistedGrantsRecord;
import ru.toxic.db.identity.tables.records.SignInsRecord;
import ru.toxic.db.identity.tables.records.TelegramStatesRecord;
import ru.toxic.db.identity.tables.records.__EfmigrationshistoryRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AspNetRoleClaimsRecord, Integer> IDENTITY_ASP_NET_ROLE_CLAIMS = Identities0.IDENTITY_ASP_NET_ROLE_CLAIMS;
    public static final Identity<AspNetUserClaimsRecord, Integer> IDENTITY_ASP_NET_USER_CLAIMS = Identities0.IDENTITY_ASP_NET_USER_CLAIMS;
    public static final Identity<SignInsRecord, Long> IDENTITY_SIGN_INS = Identities0.IDENTITY_SIGN_INS;
    public static final Identity<TelegramStatesRecord, Long> IDENTITY_TELEGRAM_STATES = Identities0.IDENTITY_TELEGRAM_STATES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<__EfmigrationshistoryRecord> PK___EFMIGRATIONSHISTORY = UniqueKeys0.PK___EFMIGRATIONSHISTORY;
    public static final UniqueKey<AspNetRoleClaimsRecord> PK_ASP_NET_ROLE_CLAIMS = UniqueKeys0.PK_ASP_NET_ROLE_CLAIMS;
    public static final UniqueKey<AspNetRolesRecord> PK_ASP_NET_ROLES = UniqueKeys0.PK_ASP_NET_ROLES;
    public static final UniqueKey<AspNetUserClaimsRecord> PK_ASP_NET_USER_CLAIMS = UniqueKeys0.PK_ASP_NET_USER_CLAIMS;
    public static final UniqueKey<AspNetUserLoginsRecord> PK_ASP_NET_USER_LOGINS = UniqueKeys0.PK_ASP_NET_USER_LOGINS;
    public static final UniqueKey<AspNetUserRolesRecord> PK_ASP_NET_USER_ROLES = UniqueKeys0.PK_ASP_NET_USER_ROLES;
    public static final UniqueKey<AspNetUserTokensRecord> PK_ASP_NET_USER_TOKENS = UniqueKeys0.PK_ASP_NET_USER_TOKENS;
    public static final UniqueKey<AspNetUsersRecord> PK_ASP_NET_USERS = UniqueKeys0.PK_ASP_NET_USERS;
    public static final UniqueKey<PersistedGrantsRecord> PK_PERSISTED_GRANTS = UniqueKeys0.PK_PERSISTED_GRANTS;
    public static final UniqueKey<SignInsRecord> PK_SIGN_INS = UniqueKeys0.PK_SIGN_INS;
    public static final UniqueKey<TelegramStatesRecord> PK_TELEGRAM_STATES = UniqueKeys0.PK_TELEGRAM_STATES;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AspNetRoleClaimsRecord, AspNetRolesRecord> ASP_NET_ROLE_CLAIMS__FK_ASP_NET_ROLE_CLAIMS_ASP_NET_ROLES_ROLE_ID = ForeignKeys0.ASP_NET_ROLE_CLAIMS__FK_ASP_NET_ROLE_CLAIMS_ASP_NET_ROLES_ROLE_ID;
    public static final ForeignKey<AspNetUserClaimsRecord, AspNetUsersRecord> ASP_NET_USER_CLAIMS__FK_ASP_NET_USER_CLAIMS_ASP_NET_USERS_USER_ID = ForeignKeys0.ASP_NET_USER_CLAIMS__FK_ASP_NET_USER_CLAIMS_ASP_NET_USERS_USER_ID;
    public static final ForeignKey<AspNetUserLoginsRecord, AspNetUsersRecord> ASP_NET_USER_LOGINS__FK_ASP_NET_USER_LOGINS_ASP_NET_USERS_USER_ID = ForeignKeys0.ASP_NET_USER_LOGINS__FK_ASP_NET_USER_LOGINS_ASP_NET_USERS_USER_ID;
    public static final ForeignKey<AspNetUserRolesRecord, AspNetUsersRecord> ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_USERS_USER_ID = ForeignKeys0.ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_USERS_USER_ID;
    public static final ForeignKey<AspNetUserRolesRecord, AspNetRolesRecord> ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_ROLES_ROLE_ID = ForeignKeys0.ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_ROLES_ROLE_ID;
    public static final ForeignKey<AspNetUserTokensRecord, AspNetUsersRecord> ASP_NET_USER_TOKENS__FK_ASP_NET_USER_TOKENS_ASP_NET_USERS_USER_ID = ForeignKeys0.ASP_NET_USER_TOKENS__FK_ASP_NET_USER_TOKENS_ASP_NET_USERS_USER_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AspNetRoleClaimsRecord, Integer> IDENTITY_ASP_NET_ROLE_CLAIMS = Internal.createIdentity(AspNetRoleClaims.ASP_NET_ROLE_CLAIMS, AspNetRoleClaims.ASP_NET_ROLE_CLAIMS.ID);
        public static Identity<AspNetUserClaimsRecord, Integer> IDENTITY_ASP_NET_USER_CLAIMS = Internal.createIdentity(AspNetUserClaims.ASP_NET_USER_CLAIMS, AspNetUserClaims.ASP_NET_USER_CLAIMS.ID);
        public static Identity<SignInsRecord, Long> IDENTITY_SIGN_INS = Internal.createIdentity(SignIns.SIGN_INS, SignIns.SIGN_INS.ID);
        public static Identity<TelegramStatesRecord, Long> IDENTITY_TELEGRAM_STATES = Internal.createIdentity(TelegramStates.TELEGRAM_STATES, TelegramStates.TELEGRAM_STATES.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<__EfmigrationshistoryRecord> PK___EFMIGRATIONSHISTORY = Internal.createUniqueKey(__Efmigrationshistory.__EFMIGRATIONSHISTORY, "PK___EFMigrationsHistory", new TableField[] { __Efmigrationshistory.__EFMIGRATIONSHISTORY.MIGRATIONID }, true);
        public static final UniqueKey<AspNetRoleClaimsRecord> PK_ASP_NET_ROLE_CLAIMS = Internal.createUniqueKey(AspNetRoleClaims.ASP_NET_ROLE_CLAIMS, "pk_asp_net_role_claims", new TableField[] { AspNetRoleClaims.ASP_NET_ROLE_CLAIMS.ID }, true);
        public static final UniqueKey<AspNetRolesRecord> PK_ASP_NET_ROLES = Internal.createUniqueKey(AspNetRoles.ASP_NET_ROLES, "pk_asp_net_roles", new TableField[] { AspNetRoles.ASP_NET_ROLES.ID }, true);
        public static final UniqueKey<AspNetUserClaimsRecord> PK_ASP_NET_USER_CLAIMS = Internal.createUniqueKey(AspNetUserClaims.ASP_NET_USER_CLAIMS, "pk_asp_net_user_claims", new TableField[] { AspNetUserClaims.ASP_NET_USER_CLAIMS.ID }, true);
        public static final UniqueKey<AspNetUserLoginsRecord> PK_ASP_NET_USER_LOGINS = Internal.createUniqueKey(AspNetUserLogins.ASP_NET_USER_LOGINS, "pk_asp_net_user_logins", new TableField[] { AspNetUserLogins.ASP_NET_USER_LOGINS.LOGIN_PROVIDER, AspNetUserLogins.ASP_NET_USER_LOGINS.PROVIDER_KEY }, true);
        public static final UniqueKey<AspNetUserRolesRecord> PK_ASP_NET_USER_ROLES = Internal.createUniqueKey(AspNetUserRoles.ASP_NET_USER_ROLES, "pk_asp_net_user_roles", new TableField[] { AspNetUserRoles.ASP_NET_USER_ROLES.USER_ID, AspNetUserRoles.ASP_NET_USER_ROLES.ROLE_ID }, true);
        public static final UniqueKey<AspNetUserTokensRecord> PK_ASP_NET_USER_TOKENS = Internal.createUniqueKey(AspNetUserTokens.ASP_NET_USER_TOKENS, "pk_asp_net_user_tokens", new TableField[] { AspNetUserTokens.ASP_NET_USER_TOKENS.USER_ID, AspNetUserTokens.ASP_NET_USER_TOKENS.LOGIN_PROVIDER, AspNetUserTokens.ASP_NET_USER_TOKENS.NAME }, true);
        public static final UniqueKey<AspNetUsersRecord> PK_ASP_NET_USERS = Internal.createUniqueKey(AspNetUsers.ASP_NET_USERS, "pk_asp_net_users", new TableField[] { AspNetUsers.ASP_NET_USERS.ID }, true);
        public static final UniqueKey<PersistedGrantsRecord> PK_PERSISTED_GRANTS = Internal.createUniqueKey(PersistedGrants.PERSISTED_GRANTS, "pk_persisted_grants", new TableField[] { PersistedGrants.PERSISTED_GRANTS.KEY }, true);
        public static final UniqueKey<SignInsRecord> PK_SIGN_INS = Internal.createUniqueKey(SignIns.SIGN_INS, "pk_sign_ins", new TableField[] { SignIns.SIGN_INS.ID }, true);
        public static final UniqueKey<TelegramStatesRecord> PK_TELEGRAM_STATES = Internal.createUniqueKey(TelegramStates.TELEGRAM_STATES, "pk_telegram_states", new TableField[] { TelegramStates.TELEGRAM_STATES.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AspNetRoleClaimsRecord, AspNetRolesRecord> ASP_NET_ROLE_CLAIMS__FK_ASP_NET_ROLE_CLAIMS_ASP_NET_ROLES_ROLE_ID = Internal.createForeignKey(Keys.PK_ASP_NET_ROLES, AspNetRoleClaims.ASP_NET_ROLE_CLAIMS, "fk_asp_net_role_claims_asp_net_roles_role_id", new TableField[] { AspNetRoleClaims.ASP_NET_ROLE_CLAIMS.ROLE_ID }, true);
        public static final ForeignKey<AspNetUserClaimsRecord, AspNetUsersRecord> ASP_NET_USER_CLAIMS__FK_ASP_NET_USER_CLAIMS_ASP_NET_USERS_USER_ID = Internal.createForeignKey(Keys.PK_ASP_NET_USERS, AspNetUserClaims.ASP_NET_USER_CLAIMS, "fk_asp_net_user_claims_asp_net_users_user_id", new TableField[] { AspNetUserClaims.ASP_NET_USER_CLAIMS.USER_ID }, true);
        public static final ForeignKey<AspNetUserLoginsRecord, AspNetUsersRecord> ASP_NET_USER_LOGINS__FK_ASP_NET_USER_LOGINS_ASP_NET_USERS_USER_ID = Internal.createForeignKey(Keys.PK_ASP_NET_USERS, AspNetUserLogins.ASP_NET_USER_LOGINS, "fk_asp_net_user_logins_asp_net_users_user_id", new TableField[] { AspNetUserLogins.ASP_NET_USER_LOGINS.USER_ID }, true);
        public static final ForeignKey<AspNetUserRolesRecord, AspNetUsersRecord> ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_USERS_USER_ID = Internal.createForeignKey(Keys.PK_ASP_NET_USERS, AspNetUserRoles.ASP_NET_USER_ROLES, "fk_asp_net_user_roles_asp_net_users_user_id", new TableField[] { AspNetUserRoles.ASP_NET_USER_ROLES.USER_ID }, true);
        public static final ForeignKey<AspNetUserRolesRecord, AspNetRolesRecord> ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_ROLES_ROLE_ID = Internal.createForeignKey(Keys.PK_ASP_NET_ROLES, AspNetUserRoles.ASP_NET_USER_ROLES, "fk_asp_net_user_roles_asp_net_roles_role_id", new TableField[] { AspNetUserRoles.ASP_NET_USER_ROLES.ROLE_ID }, true);
        public static final ForeignKey<AspNetUserTokensRecord, AspNetUsersRecord> ASP_NET_USER_TOKENS__FK_ASP_NET_USER_TOKENS_ASP_NET_USERS_USER_ID = Internal.createForeignKey(Keys.PK_ASP_NET_USERS, AspNetUserTokens.ASP_NET_USER_TOKENS, "fk_asp_net_user_tokens_asp_net_users_user_id", new TableField[] { AspNetUserTokens.ASP_NET_USER_TOKENS.USER_ID }, true);
    }
}
