/*
 * This file is generated by jOOQ.
 */
package ru.toxic.db.identity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.toxic.db.identity.tables.AspNetRoles;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AspNetRolesRecord extends UpdatableRecordImpl<AspNetRolesRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 223111641;

    /**
     * Setter for <code>public.asp_net_roles.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.asp_net_roles.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.asp_net_roles.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.asp_net_roles.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.asp_net_roles.normalized_name</code>.
     */
    public void setNormalizedName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.asp_net_roles.normalized_name</code>.
     */
    public String getNormalizedName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.asp_net_roles.concurrency_stamp</code>.
     */
    public void setConcurrencyStamp(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.asp_net_roles.concurrency_stamp</code>.
     */
    public String getConcurrencyStamp() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AspNetRoles.ASP_NET_ROLES.ID;
    }

    @Override
    public Field<String> field2() {
        return AspNetRoles.ASP_NET_ROLES.NAME;
    }

    @Override
    public Field<String> field3() {
        return AspNetRoles.ASP_NET_ROLES.NORMALIZED_NAME;
    }

    @Override
    public Field<String> field4() {
        return AspNetRoles.ASP_NET_ROLES.CONCURRENCY_STAMP;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getNormalizedName();
    }

    @Override
    public String component4() {
        return getConcurrencyStamp();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getNormalizedName();
    }

    @Override
    public String value4() {
        return getConcurrencyStamp();
    }

    @Override
    public AspNetRolesRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AspNetRolesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AspNetRolesRecord value3(String value) {
        setNormalizedName(value);
        return this;
    }

    @Override
    public AspNetRolesRecord value4(String value) {
        setConcurrencyStamp(value);
        return this;
    }

    @Override
    public AspNetRolesRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AspNetRolesRecord
     */
    public AspNetRolesRecord() {
        super(AspNetRoles.ASP_NET_ROLES);
    }

    /**
     * Create a detached, initialised AspNetRolesRecord
     */
    public AspNetRolesRecord(String id, String name, String normalizedName, String concurrencyStamp) {
        super(AspNetRoles.ASP_NET_ROLES);

        set(0, id);
        set(1, name);
        set(2, normalizedName);
        set(3, concurrencyStamp);
    }
}
