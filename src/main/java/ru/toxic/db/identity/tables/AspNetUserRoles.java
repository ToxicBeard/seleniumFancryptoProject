/*
 * This file is generated by jOOQ.
 */
package ru.toxic.db.identity.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.toxic.db.identity.Indexes;
import ru.toxic.db.identity.Keys;
import ru.toxic.db.identity.Public;
import ru.toxic.db.identity.tables.records.AspNetUserRolesRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AspNetUserRoles extends TableImpl<AspNetUserRolesRecord> {

    private static final long serialVersionUID = -965673918;

    /**
     * The reference instance of <code>public.asp_net_user_roles</code>
     */
    public static final AspNetUserRoles ASP_NET_USER_ROLES = new AspNetUserRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AspNetUserRolesRecord> getRecordType() {
        return AspNetUserRolesRecord.class;
    }

    /**
     * The column <code>public.asp_net_user_roles.user_id</code>.
     */
    public final TableField<AspNetUserRolesRecord, String> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.asp_net_user_roles.role_id</code>.
     */
    public final TableField<AspNetUserRolesRecord, String> ROLE_ID = createField(DSL.name("role_id"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.asp_net_user_roles</code> table reference
     */
    public AspNetUserRoles() {
        this(DSL.name("asp_net_user_roles"), null);
    }

    /**
     * Create an aliased <code>public.asp_net_user_roles</code> table reference
     */
    public AspNetUserRoles(String alias) {
        this(DSL.name(alias), ASP_NET_USER_ROLES);
    }

    /**
     * Create an aliased <code>public.asp_net_user_roles</code> table reference
     */
    public AspNetUserRoles(Name alias) {
        this(alias, ASP_NET_USER_ROLES);
    }

    private AspNetUserRoles(Name alias, Table<AspNetUserRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AspNetUserRoles(Name alias, Table<AspNetUserRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AspNetUserRoles(Table<O> child, ForeignKey<O, AspNetUserRolesRecord> key) {
        super(child, key, ASP_NET_USER_ROLES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IX_ASP_NET_USER_ROLES_ROLE_ID);
    }

    @Override
    public UniqueKey<AspNetUserRolesRecord> getPrimaryKey() {
        return Keys.PK_ASP_NET_USER_ROLES;
    }

    @Override
    public List<UniqueKey<AspNetUserRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<AspNetUserRolesRecord>>asList(Keys.PK_ASP_NET_USER_ROLES);
    }

    @Override
    public List<ForeignKey<AspNetUserRolesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AspNetUserRolesRecord, ?>>asList(Keys.ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_USERS_USER_ID, Keys.ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_ROLES_ROLE_ID);
    }

    public AspNetUsers aspNetUsers() {
        return new AspNetUsers(this, Keys.ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_USERS_USER_ID);
    }

    public AspNetRoles aspNetRoles() {
        return new AspNetRoles(this, Keys.ASP_NET_USER_ROLES__FK_ASP_NET_USER_ROLES_ASP_NET_ROLES_ROLE_ID);
    }

    @Override
    public AspNetUserRoles as(String alias) {
        return new AspNetUserRoles(DSL.name(alias), this);
    }

    @Override
    public AspNetUserRoles as(Name alias) {
        return new AspNetUserRoles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AspNetUserRoles rename(String name) {
        return new AspNetUserRoles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AspNetUserRoles rename(Name name) {
        return new AspNetUserRoles(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
