import org.yaml.snakeyaml.Yaml

buildscript{
    dependencies {
        classpath("org.yaml:snakeyaml:1.26")
    }
}
plugins {
    id 'java'
    id 'groovy'
    id 'io.qameta.allure' version '2.8.1'
    id 'nu.studer.jooq' version '4.1'
}

group 'is.toxic'
version '1.0-SNAPSHOT'

apply from: 'gradle/dependencies.gradle'
List props = new Yaml().loadAll(new FileInputStream(new File("config/properties.yml"))).asList()

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testAnnotationProcessor libs.lombok
    annotationProcessor libs.lombok

    compile libs.cucumber
    compile libs.jooq
    compile libs.common
    compile libs.lombok
    compile libs.logging
    compile libs.tests
}

tasks.withType(JavaCompile) {
    java.sourceCompatibility JavaVersion.VERSION_11
    java.targetCompatibility JavaVersion.VERSION_11
    java.withSourcesJar()
    java.properties.putIfAbsent('Dfile.encoding', "UTF-8")
    java.properties.putIfAbsent('Dsun.jnu.encoding', "UTF-8")
    options.encoding = 'UTF-8'
}

configurations {
    buildscriptRuntime{
        extendsFrom testImplementation
    }
    cucumberRuntime {
        extendsFrom testImplementation
    }
    jooqRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'io.qameta.allure.cucumber5jvm.AllureCucumber5Jvm',
                    '--glue', 'is.toxic', 'src\\main\\resources\\features',
                    '--strict',
                    '--tags', props['cucumber']['tags'][0],
                    '--threads', props['cucumber']['threads'][0]
            ]
        }
    }
}

jooq() {
    def dbProps = props['db']

    version = '3.13.3'
    edition = 'OSS'

    globalbitcoins_data(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = dbProps['data']['url'][0]
            user = dbProps['data']['user'][0]
            password = dbProps['data']['password'][0]
        }
        generator {
            name = 'org.jooq.codegen.JavaGenerator'
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
            }
            target {
                packageName = 'is.toxic.db.data'
                directory = 'src/main/java'
            }
        }
    }
    globalbitcoins_identity(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = dbProps['identity']['url'][0]
            user = dbProps['identity']['user'][0]
            password = dbProps['identity']['password'][0]
        }
        generator {
            name = 'org.jooq.codegen.JavaGenerator'
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
            }
            target {
                packageName = 'is.toxic.db.identity'
                directory = 'src/main/java'
            }
        }
    }
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = '2.13.3'
    resultsDir = file(project.projectDir.toString() +'\\allure-results')
    useCucumberJVM {
        version = '2.13.3'
    }
}
